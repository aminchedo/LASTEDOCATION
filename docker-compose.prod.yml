version: "3.8"

services:
  ml_service:
    build: ./ml_service
    restart: always
    ports:
      - "8000:8000"
    volumes:
      - ml_models:/app/models
      - ml_logs:/app/logs
      - ml_db:/app
    environment:
      - ML_SERVICE_PORT=8000
      - RANDOM_SEED=2025
      - N_ESTIMATORS=100
      - MAX_UPLOAD_MB=50
    networks:
      - lastedocation
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '1.0'
          memory: 1G
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  backend:
    build: 
      context: ./BACKEND
      dockerfile: Dockerfile
    restart: always
    ports:
      - "3001:3001"
    environment:
      - ML_SERVICE_BASE_URL=http://ml_service:8000
      - PORT=3001
      - NODE_ENV=production
    depends_on:
      ml_service:
        condition: service_healthy
    networks:
      - lastedocation
    volumes:
      - backend_uploads:/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  client:
    build:
      context: ./client
      dockerfile: Dockerfile.prod
    restart: always
    ports:
      - "3000:80"
    environment:
      - VITE_API_BASE_URL=http://localhost:3001
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - lastedocation
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Nginx reverse proxy (optional but recommended)
  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - client
      - backend
    networks:
      - lastedocation
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  ml_models:
    driver: local
  ml_logs:
    driver: local
  ml_db:
    driver: local
  backend_uploads:
    driver: local

networks:
  lastedocation:
    driver: bridge
