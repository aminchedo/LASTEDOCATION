import{b as a}from"./react-vendor-CHIk2tMd.js";import{u as T}from"./index-Br5p3c61.js";function F(){const{settings:s}=T(),[m,c]=a.useState([]),[p,l]=a.useState(null),[y,d]=a.useState(!0),[g,u]=a.useState(null),[w,h]=a.useState([]),[S,f]=a.useState(null),i=a.useCallback(async()=>{try{d(!0),u(null);const o=s.models||{customFolders:[],autoScan:!0,scanDepth:2},e=new URLSearchParams({customFolders:JSON.stringify(o.customFolders),scanDepth:o.scanDepth.toString(),autoScan:o.autoScan.toString()}),t=localStorage.getItem("authToken"),r=await fetch(`${s.api.baseUrl}/api/models/detected?${e}`,{method:"GET",headers:{"Content-Type":"application/json",...t&&{Authorization:`Bearer ${t}`}}});if(!r.ok)throw new Error(`Failed to fetch detected models: ${r.status} ${r.statusText}`);const n=await r.json();if(!n.success)throw new Error(n.error||"Failed to fetch detected models");c(n.models||[]),l(n.statistics||null),h(n.scanned_directories||[]),f(n.configuration||null)}catch(o){const e=o instanceof Error?o.message:"Failed to load detected models";console.error("useDetectedModels error:",e),u(e),c([]),l(null),h([]),f(null)}finally{d(!1)}},[s.api.baseUrl,s.api.key,s.models]),k=a.useCallback(async(o,e={})=>{try{const t=localStorage.getItem("authToken"),r=await fetch(`${s.api.baseUrl}/api/models/scan`,{method:"POST",headers:{"Content-Type":"application/json",...t&&{Authorization:`Bearer ${t}`}},body:JSON.stringify({folders:o,maxDepth:e.maxDepth||3,includeHidden:e.includeHidden||!1,minSizeBytes:1024*1024})});if(!r.ok)throw new Error(`Failed to scan directories: ${r.status} ${r.statusText}`);const n=await r.json();if(!n.success)throw new Error(n.error||"Failed to scan directories");return n.models||[]}catch(t){const r=t instanceof Error?t.message:"Failed to scan directories";throw console.error("scanDirectories error:",r),new Error(r)}},[s.api.baseUrl,s.api.key]),E=a.useCallback(async o=>{try{const e=localStorage.getItem("authToken"),t=await fetch(`${s.api.baseUrl}/api/models/analyze-directory`,{method:"POST",headers:{"Content-Type":"application/json",...e&&{Authorization:`Bearer ${e}`}},body:JSON.stringify({path:o})});if(!t.ok)throw new Error(`Failed to analyze directory: ${t.status} ${t.statusText}`);const r=await t.json();if(!r.success)throw new Error(r.error||"Failed to analyze directory");return{isModelDirectory:r.is_model_directory||!1,models:r.models||[]}}catch(e){const t=e instanceof Error?e.message:"Failed to analyze directory";throw console.error("analyzeDirectory error:",t),new Error(t)}},[s.api.baseUrl,s.api.key]),D=a.useCallback(async()=>{try{const o=localStorage.getItem("authToken"),e=await fetch(`${s.api.baseUrl}/api/models/default-directories`,{method:"GET",headers:{"Content-Type":"application/json",...o&&{Authorization:`Bearer ${o}`}}});if(!e.ok)throw new Error(`Failed to get default directories: ${e.status} ${e.statusText}`);const t=await e.json();if(!t.success)throw new Error(t.error||"Failed to get default directories");return t.directories||[]}catch(o){const e=o instanceof Error?o.message:"Failed to get default directories";throw console.error("getDefaultDirectories error:",e),new Error(e)}},[s.api.baseUrl,s.api.key]);return a.useEffect(()=>{i()},[i]),{models:m,statistics:p,loading:y,error:g,scannedDirectories:w,configuration:S,refetch:i,scanDirectories:k,analyzeDirectory:E,getDefaultDirectories:D}}export{F as u};
