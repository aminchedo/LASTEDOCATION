import{c as m}from"./index-Br5p3c61.js";import{b as o}from"./react-vendor-CHIk2tMd.js";import{c as n}from"./api-BM4dxxsF.js";/**
 * @license lucide-react v0.454.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const T=m("TrendingDown",[["polyline",{points:"22 17 13.5 8.5 8.5 13.5 2 7",key:"1r2t7k"}],["polyline",{points:"16 17 22 17 22 11",key:"11uiuu"}]]);function F(){const[a,l]=o.useState([]),[g,i]=o.useState(!0),[u,c]=o.useState(null),t=o.useCallback(async()=>{try{i(!0);const e=await n.get("/api/training/jobs");if(e.success)l(e.data),c(null);else throw new Error(e.error||"Failed to fetch training jobs")}catch(e){const r=e.message||"Failed to fetch training jobs";c(r),console.error("Training jobs fetch error:",r)}finally{i(!1)}},[]),w=o.useCallback(async e=>{try{const r=await n.post("/api/training/start",e);if(r.success)return await t(),r.data;throw new Error(r.error||"Failed to start training")}catch(r){const s=r.message||"Failed to start training";throw console.error("Training start error:",s),new Error(s)}},[t]),p=o.useCallback(async e=>{try{const r=await n.post(`/api/training/${e}/stop`);if(r.success)return await t(),!0;throw new Error(r.error||"Failed to stop training")}catch(r){const s=r.message||"Failed to stop training";throw console.error("Training stop error:",s),new Error(s)}},[t]),h=o.useCallback(async e=>{try{const r=await n.post(`/api/training/${e}/resume`);if(r.success)return await t(),!0;throw new Error(r.error||"Failed to resume training")}catch(r){const s=r.message||"Failed to resume training";throw console.error("Training resume error:",s),new Error(s)}},[t]),d=o.useCallback(async e=>{try{const r=await n.post(`/api/training/${e}/cancel`);if(r.success)return await t(),!0;throw new Error(r.error||"Failed to cancel training")}catch(r){const s=r.message||"Failed to cancel training";throw console.error("Training cancel error:",s),new Error(s)}},[t]),f=o.useCallback(async e=>{try{const r=await n.get(`/api/training/${e}/logs`);if(r.success)return r.data;throw new Error(r.error||"Failed to get job logs")}catch(r){const s=r.message||"Failed to get job logs";throw console.error("Training logs error:",s),new Error(s)}},[]);return o.useEffect(()=>{t();const e=setInterval(()=>{a.some(s=>s.status==="running"||s.status==="queued")&&t()},5e3);return()=>clearInterval(e)},[t,a]),{jobs:a,loading:g,error:u,refetch:t,startTraining:w,stopTraining:p,resumeTraining:h,cancelTraining:d,getJobLogs:f}}export{T,F as u};
