name: ML Pipeline CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'ml_service/**'
      - 'BACKEND/src/services/mlProxy.ts'
      - 'BACKEND/src/routes/models.ts'
      - 'client/src/api/ml.ts'
      - 'client/src/pages/Train.tsx'
      - 'client/src/pages/Predict.tsx'
      - 'docker-compose.yml'
  pull_request:
    branches: [ main ]

jobs:
  test-ml-service:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          cd ml_service
          pip install -r requirements.txt
      
      - name: Run ML tests
        run: |
          cd ml_service
          python3 test_local.py
      
      - name: Test imports
        run: |
          cd ml_service
          python3 -c "from app import app; from modeling import train_model; from database import init_db; print('âœ“ All imports OK')"

  test-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      
      - name: Install dependencies
        run: |
          cd BACKEND
          npm ci
      
      - name: TypeScript check
        run: |
          cd BACKEND
          npx tsc --noEmit

  test-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      
      - name: Install dependencies
        run: |
          cd client
          npm ci
      
      - name: TypeScript check
        run: |
          cd client
          npx tsc --noEmit
      
      - name: Build
        run: |
          cd client
          npm run build

  integration-test:
    runs-on: ubuntu-latest
    needs: [test-ml-service, test-backend, test-frontend]
    steps:
      - uses: actions/checkout@v3
      
      - name: Build Docker images
        run: docker-compose build
      
      - name: Start services
        run: docker-compose up -d
      
      - name: Wait for services
        run: |
          sleep 30
          curl --retry 10 --retry-delay 5 http://localhost:8000/health
          curl --retry 10 --retry-delay 5 http://localhost:3001/api/health
      
      - name: Run integration tests
        run: |
          chmod +x test_ml_api.sh
          ./test_ml_api.sh
      
      - name: Stop services
        if: always()
        run: docker-compose down
