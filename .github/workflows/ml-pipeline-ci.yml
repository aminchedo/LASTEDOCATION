name: ML Pipeline CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/ml-pipeline

jobs:
  test-ml-pipeline:
    name: Test ML Pipeline
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: 📦 Install dependencies
        run: |
          pip install -r ML/requirements.txt
          pip install pytest flake8 black
          
      - name: 🔍 Lint code
        run: |
          flake8 ML/ --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 ML/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
          
      - name: 🧪 Run tests
        run: |
          pytest ML/tests/ -v
          
      - name: 📊 Run ML pipeline
        run: |
          python ML/train.py

  build-ml-image:
    name: Build ML Docker Image
    runs-on: ubuntu-latest
    needs: test-ml-pipeline
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: 🔐 Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: 🏷️ Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}
      
      - name: 🏗️ Build and push ML image
        uses: docker/build-push-action@v5
        with:
          context: ./ML
          file: ./ML/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
