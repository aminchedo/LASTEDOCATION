name: CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  # Backend tests
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_PASSWORD: test
          POSTGRES_DB: persian_tts_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: BACKEND/package-lock.json
      
      - name: Install dependencies
        working-directory: BACKEND
        run: npm ci
      
      - name: Run linter
        working-directory: BACKEND
        run: npm run lint
      
      - name: Run type check
        working-directory: BACKEND
        run: npx tsc --noEmit
      
      - name: Run tests
        working-directory: BACKEND
        run: npm run test:coverage
        env:
          DATABASE_URL: postgresql://postgres:test@localhost:5432/persian_tts_test
          JWT_SECRET: test-secret
          NODE_ENV: test
      
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          files: ./BACKEND/coverage/coverage-final.json
          flags: backend
          name: backend-coverage
  
  # Frontend tests
  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: client/package-lock.json
      
      - name: Install dependencies
        working-directory: client
        run: npm ci
      
      - name: Run linter
        working-directory: client
        run: npm run lint
        continue-on-error: true
      
      - name: Run type check
        working-directory: client
        run: npx tsc --noEmit
        continue-on-error: true
      
      - name: Build frontend
        working-directory: client
        run: npm run build
  
  # Security scanning
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
      
      - name: Upload Trivy results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'
      
      - name: Run npm audit (backend)
        working-directory: BACKEND
        run: npm audit --audit-level=high
        continue-on-error: true
      
      - name: Run npm audit (frontend)
        working-directory: client
        run: npm audit --audit-level=high
        continue-on-error: true
  
  # Build test
  build:
    name: Build Test
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Build backend
        working-directory: BACKEND
        run: |
          npm ci
          npm run build
      
      - name: Build frontend
        working-directory: client
        run: |
          npm ci
          npm run build
      
      - name: Upload backend artifacts
        uses: actions/upload-artifact@v3
        with:
          name: backend-dist
          path: BACKEND/dist
      
      - name: Upload frontend artifacts
        uses: actions/upload-artifact@v3
        with:
          name: frontend-dist
          path: client/dist
