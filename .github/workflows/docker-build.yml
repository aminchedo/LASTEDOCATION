name: Build Backend Docker Image

on:
  push:
    branches: [main, develop, cursor/**]
  pull_request:
    branches: [main, develop]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/backend

jobs:
  build-backend:
    name: Build Backend Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # For PRs: pr-<number>
            type=ref,event=pr,prefix=pr-
            # For branches: branch name (sanitized)
            type=ref,event=branch
            # For tags: semver
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            # For commits: sha-<short sha>
            type=sha,prefix=sha-,format=short
            # Latest tag for main branch
            type=raw,value=latest,enable={{is_default_branch}}
          labels: |
            org.opencontainers.image.title=LASTEDOCATION Backend
            org.opencontainers.image.description=Backend API for LASTEDOCATION
            org.opencontainers.image.licenses=MIT

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./BACKEND
          file: ./BACKEND/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
          build-args: |
            NODE_VERSION=20
          provenance: mode=max

      - name: Generate build summary
        if: always()
        run: |
          echo "## Docker Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Image:** \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Tags:**" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Build Args:**" >> $GITHUB_STEP_SUMMARY
          echo "- NODE_VERSION: 20" >> $GITHUB_STEP_SUMMARY
          echo "- Platforms: linux/amd64, linux/arm64" >> $GITHUB_STEP_SUMMARY

      - name: Verify build success
        if: success()
        run: |
          echo "âœ… Docker image built successfully!"
          echo "Image tags:"
          echo "${{ steps.meta.outputs.tags }}"
