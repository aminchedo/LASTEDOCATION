version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:14-alpine
    container_name: persian-tts-db
    environment:
      POSTGRES_DB: ${DB_NAME:-persian_tts}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./BACKEND/src/database/schema.sql:/docker-entrypoint-initdb.d/schema.sql:ro
    networks:
      - persian-tts-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-persian_tts}"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"

  # Backend Service
  backend:
    build:
      context: ./BACKEND
      dockerfile: Dockerfile
    container_name: persian-tts-backend
    depends_on:
      db:
        condition: service_healthy
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DATABASE_URL=postgresql://${DB_USER:-postgres}:${DB_PASSWORD}@db:5432/${DB_NAME:-persian_tts}
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-persian_tts}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - SESSION_SECRET=${SESSION_SECRET}
      - HF_TOKEN=${HF_TOKEN}
      - CORS_ORIGIN=${CORS_ORIGIN:-http://localhost:80}
      - LOG_LEVEL=${LOG_LEVEL:-info}
    volumes:
      - ./BACKEND/models:/app/models
      - ./BACKEND/data:/app/data
      - ./BACKEND/logs:/app/logs
      - ./BACKEND/artifacts:/app/artifacts
    networks:
      - persian-tts-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/health', (r) => process.exit(r.statusCode === 200 ? 0 : 1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    ports:
      - "3001:3001"

  # Client/Frontend Service
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: persian-tts-client
    depends_on:
      - backend
    environment:
      - VITE_API_URL=http://backend:3001
      - VITE_WS_URL=ws://backend:3001
    networks:
      - persian-tts-network
    restart: unless-stopped
    ports:
      - "80:80"
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis (optional, for caching and job queues)
  redis:
    image: redis:7-alpine
    container_name: persian-tts-redis
    networks:
      - persian-tts-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"

networks:
  persian-tts-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
