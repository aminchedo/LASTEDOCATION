version: '3.8'

services:
  postgres:
    image: postgres:14-alpine
    container_name: persian-tts-db
    environment:
      POSTGRES_DB: ${DB_NAME:-persian_tts}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./BACKEND/src/database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  backend:
    build:
      context: ./BACKEND
      dockerfile: Dockerfile
    container_name: persian-tts-backend
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: postgresql://${DB_USER:-postgres}:${DB_PASSWORD}@postgres:5432/${DB_NAME:-persian_tts}
      JWT_SECRET: ${JWT_SECRET}
      SESSION_SECRET: ${SESSION_SECRET:-}
      HF_TOKEN: ${HF_TOKEN:-}
      SENTRY_DSN: ${SENTRY_DSN:-}
      LOG_LEVEL: info
    volumes:
      - models_data:/app/models
      - logs_data:/app/logs
    ports:
      - "3001:3001"
    restart: unless-stopped

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: persian-tts-client
    depends_on:
      - backend
    ports:
      - "80:80"
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  models_data:
    driver: local
  logs_data:
    driver: local
