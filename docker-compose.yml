version: '3.8'

services:
  # Backend Service
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: model-training-backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - JWT_SECRET=${JWT_SECRET:-change-me-in-production-use-long-random-string}
      - JWT_EXPIRES_IN=7d
      - CORS_ORIGIN=http://localhost:3000,http://localhost:5173
      - LOG_LEVEL=info
    volumes:
      # Persist models, data, and logs
      - ./models:/app/models
      - ./data:/app/data
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    networks:
      - model-training-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Service (Nginx)
  frontend:
    image: nginx:alpine
    container_name: model-training-frontend
    ports:
      - "3000:80"
    volumes:
      - ./client/dist:/usr/share/nginx/html:ro
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - backend
    networks:
      - model-training-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  model-training-network:
    driver: bridge

volumes:
  models:
    driver: local
  data:
    driver: local
  logs:
    driver: local
  uploads:
    driver: local
